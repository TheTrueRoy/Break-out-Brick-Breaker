package tsg.ttt.main.states;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.io.FileWriter;
import java.io.IOException;

import tsg.ttt.main.Game;
import tsg.ttt.main.Handler;
import tsg.ttt.main.control.keyboard.KeyManager;
import tsg.ttt.main.gfx.Assets;
import tsg.ttt.main.ui.*;
import tsg.ttt.main.ui.particles.blackParticle;

public class SettingState extends State{ //Basically a bunch of buttons that change certain variables
	
	private UIManager uiManager;
	Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
	
	KeyManager keyManager = handler.getKeyManager();
	private static State lastState;
	
	public State getLastState() {
		return lastState;
	}

	public static void setLastState(State lastS) {
		lastState = lastS;
	}

	int time = 0;
	
	public SettingState(Handler handler) {
		super(handler);
		init();
	}

	public void init() {
		FileWriter writer;
		try {
			writer = new FileWriter("docs/userdata.txt", false);
			writer.write(Integer.toString(Game.getGold())+"\n");
			for (int i = 0; i < 8; i++) 
				writer.write(Boolean.toString(Game.getPurchases()[i])+"\n");
			writer.write(Game.getActiveSkin()+"\n");
			writer.write(Game.getActiveAnim()+"\n");
		    writer.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		uiManager = new UIManager(handler);
		handler.getMouseManager().setUIManager(uiManager);
		uiManager.addObject(new UIImage(screenSize.width/2-300, screenSize.height/10*4-30, 400, 60, Assets.darkmode));
		uiManager.addObject(new UIImage(screenSize.width/2-300, screenSize.height/10*5-30, 400, 60, Assets.easymode));
		uiManager.addObject(new UIImage(screenSize.width/2-300, screenSize.height/10*6-30, 350, 60, Assets.counter[0]));
		/*uiManager.addObject(new UIImageSwitch(screenSize.width/2+160, screenSize.height/10*4-30, 120, 60, Assets.switchBi, new ClickListener(){
			public void onClick() {
				handler.getGame().setDarkMode(!Game.isDarkMode());
			}}, Game.isDarkMode()));*/
		uiManager.addObject(new UIImageSwitch(screenSize.width/2+160, screenSize.height/10*5-30, 120, 60, Assets.switchBi, new ClickListener(){
			public void onClick() {
				handler.getGame().setEasyBot(!Game.isEasyBot());
			}}, Game.isEasyBot()));
		uiManager.addObject(new UIImageSwitch(screenSize.width/2+160, screenSize.height/10*6-30, 120, 60, Assets.switchBi, new ClickListener(){
			public void onClick() {
				handler.getGame().setCounterOn(!Game.isCounterOn());
			}}, Game.isCounterOn()));
		//Clicking this button saves everything to the preferences file
		uiManager.addObject(new UIImageButton(screenSize.width/2-90, screenSize.height/10*9, 180, 60, Assets.apply, new ClickListener(){

			public void onClick() {
				try {
		            FileWriter writer;
					writer = new FileWriter("docs/preferences.txt", false);
		            writer.write(Boolean.toString(Game.isDarkMode())+"\n");
		            writer.write(Boolean.toString(Game.isEasyBot())+"\n");
		            writer.write(Boolean.toString(Game.isCounterOn())+"\n");
		            writer.close();
		        } catch (IOException e) {
		            e.printStackTrace();
		        }
			}}, true));
		for(int i  = 0; i < 50; i++){
			uiManager.addObject(new blackParticle((float)Math.random()*screenSize.width, (float)Math.random()*screenSize.height/2+screenSize.height/2, (int)(Math.random()*5), (int)(Math.random()*20), (int)(Math.random()*480+240), (float)Math.random()*0.3f*0.3f, (float)Math.random()*1.3f*1.3f));
		}
	}
	
	public void tick() {
		if (keyManager.esc == true) {
			State.setState(lastState);
		}
		time++;
		if (time >= 3) {
			uiManager.addObject(new blackParticle((float)Math.random()*screenSize.width, screenSize.height+100, (int)(Math.random()*5), (int)(Math.random()*20), (int)(Math.random()*480+240), (float)Math.random()*0.3f*0.3f, (float)Math.random()*1.3f*1.3f));
			time = 0;
		}
		uiManager.tick();
	}

	public void render(Graphics g) {
		uiManager.render(g);
	}
}
